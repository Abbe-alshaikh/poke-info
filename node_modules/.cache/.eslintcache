[{"/home/abbe/Desktop/React-project/poke-info/poke-info/src/index.js":"1","/home/abbe/Desktop/React-project/poke-info/poke-info/src/reportWebVitals.js":"2","/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/fetch.js":"3","/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/Search.jsx":"4","/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/PokemonData.jsx":"5","/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/index.jsx":"6","/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/login.jsx":"7","/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/auth.js":"8","/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/register.jsx":"9","/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/fireBase.js":"10","/home/abbe/Desktop/React-project/poke-info/poke-info/src/App.js":"11","/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/welcome.jsx":"12","/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/privateRoute.js":"13","/home/abbe/Desktop/React-project/poke-info/poke-info/src/SignUp.js":"14","/home/abbe/Desktop/React-project/poke-info/poke-info/src/Login.js":"15","/home/abbe/Desktop/React-project/poke-info/poke-info/src/pages/home.js":"16","/home/abbe/Desktop/React-project/poke-info/poke-info/src/pages/favorite.js":"17","/home/abbe/Desktop/React-project/poke-info/poke-info/src/pages/about.js":"18"},{"size":547,"mtime":1615865858000,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1615462472000,"results":"21","hashOfConfig":"20"},{"size":194,"mtime":1616004944000,"results":"22","hashOfConfig":"20"},{"size":826,"mtime":1616003810000,"results":"23","hashOfConfig":"20"},{"size":1856,"mtime":1616002702000,"results":"24","hashOfConfig":"20"},{"size":87,"mtime":1615858400000,"results":"25","hashOfConfig":"20"},{"size":2165,"mtime":1619612797000,"results":"26","hashOfConfig":"20"},{"size":603,"mtime":1615865199000,"results":"27","hashOfConfig":"20"},{"size":2007,"mtime":1615914903000,"results":"28","hashOfConfig":"20"},{"size":693,"mtime":1616012337000,"results":"29","hashOfConfig":"20"},{"size":825,"mtime":1621111963000,"results":"30","hashOfConfig":"20"},{"size":1838,"mtime":1615858378000,"results":"31","hashOfConfig":"20"},{"size":539,"mtime":1615854190000,"results":"32","hashOfConfig":"20"},{"size":925,"mtime":1615862396048,"results":"33","hashOfConfig":"20"},{"size":1126,"mtime":1615863783107,"results":"34","hashOfConfig":"20"},{"size":5432,"mtime":1639586693749,"results":"35","hashOfConfig":"20"},{"size":2211,"mtime":1639586719152,"results":"36","hashOfConfig":"20"},{"size":450,"mtime":1639427808936,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"123me5n",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/abbe/Desktop/React-project/poke-info/poke-info/src/index.js",[],["79","80"],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/reportWebVitals.js",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/fetch.js",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/Search.jsx",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/PokemonData.jsx",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/index.jsx",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/login.jsx",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/auth.js",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/register.jsx",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/fireBase.js",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/App.js",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/components/login/welcome.jsx",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/services/privateRoute.js",["81","82"],"import React, {Component, useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom'\nimport {AuthContext, Authprovider} from './auth'\n\nconst PrivateRoute = ({component: RouteComponent, ...reset}) => {\n    const {currentUser}= useContext(AuthContext);\n    return (\n        <Route\n        {...reset}\n        render = {routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n         ) : (\n            <Redirect to ={\"/\"} />\n         )\n        }\n        />\n    );\n};\n\n\nexport default PrivateRoute;","/home/abbe/Desktop/React-project/poke-info/poke-info/src/SignUp.js",[],["83","84"],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/Login.js",[],"/home/abbe/Desktop/React-project/poke-info/poke-info/src/pages/home.js",["85","86","87"],"import { Alert } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react'\nimport auth from '../services/fireBase'\nimport db from '../services/fireBase'\nimport { Spinner } from 'react-bootstrap';\nimport PokemonData from '../components/PokemonData';\nimport Search from '../components/Search';\nimport { fetchPokemon} from '../services/fetch';\nimport { useHistory, Redirect } from 'react-router-dom'; \nimport Welcome from \"../components/login/welcome\";\nimport firebase from 'firebase';\nimport \"./homeStyle.css\";\n\n\n\nconst spinnerStyle = {\n    width: '10rem',\n    height: '10rem',\n    borderWidth: '1rem',\n    color: 'blue',\n}\n\nconst spinnerWarapperStyle= {\n    textAlign:'center',\n    marginTop: '60px',\n}\n\nconst HomePage = ()=>{\n    \n    const history = useHistory();\n    const [pokemon, setPokemon]= React.useState();\n    const [loading, setLoading]= React.useState(false);\n    const [error, setError]= React.useState(false);\n    const [errorMsg, setErrorMsg]= React.useState('');\n    const [, setIsLoggedIn]= React.useState(true);\n    const [pokeDex, setPokeDex] = useState([]);\n    \n   \n    \n    function onCatching (pokemon) {\n       \n        try {\n            \n            //console.log(pokemon);\n            let currentUser= firebase.auth().currentUser.uid;\n            console.log(currentUser)\n           firebase.database().ref(`pokemons/+${currentUser}/`).child.set({\n                selectedpokemon: pokemon.name\n               // pokedex: pokeDex\n                //presistance. Gör en modell där man kan spara datan i firebase\n                 })}catch (error) { alert(error);}\n            //++unikt global id för användaren \n            \n            \n    }\n   \n    const catchPokemon = (pokemon) => {\n        const pokemonExists = \n          pokeDex.find(p => pokemon.id === p.id); // To do:Array.prototype.find() -- done\n          if (!pokemonExists) {\n            let newState = [...pokeDex, pokemon]\n          \n            newState.sort(function (a, b) {\n              return a.id - b.id\n            })\n            \n            setPokeDex(newState)\n\n            onCatching(pokemon)\n          }\n        \n        \n      }\n    \n      const releasePokemon = id => {\n        setPokeDex(state => state.filter(p => p.id !== id))\n      }\n    \n    const logOutHandler =()=>{\n            setIsLoggedIn(false)\n            auth().signOut();\n            history.push(\"/\");\n            return <Redirect to=\"/\" component ={Welcome}/>;\n    }\n\n    const getPokemon = async (name)=> {\n        if (!name) {\n            setErrorMsg(' You must enter a pokemon name to search for.');\n             setError(true);\n             return;\n        }\n        else setError(false);\n\n        setLoading(true);\n        setTimeout( async () => {\n            try {\n            const response = await fetchPokemon(name);\n            const results= await response.json();\n            setPokemon(results);\n            setLoading(false);\n        } catch (err){\n            setLoading(false);\n            setError(true);\n            setErrorMsg('Pokemon is not found.')\n            }\n        }, 1500);\n    }\n\n    return (\n        \n        <div> \n            <header>\n                <div class=\"container\">\n                    <h1 class=\"logo\">Pokemon Catcher</h1>\n\n                    <nav>\n                        <ul>\n                            <li><a href=\"/\">Home</a></li>\n                            <li><a href=\"/about\">About</a></li>\n                            <li><a href=\"/favorite\">Your collection</a></li>\n                            <li><a onClick={() => logOutHandler()}>Sign out</a></li>\n                        </ul>\n                    </nav>\n        </div>\n            </header>\n\n                <div>\n                {error ? (\n                <Alert variant ='danger'> {errorMsg} </Alert>\n                ): null}\n\n                <Search getPokemon = {getPokemon}/>\n                {loading ? (\n                    <div style={spinnerWarapperStyle}>\n                        <Spinner animation = \"border\" style= {spinnerStyle}/>\n                    </div>\n                ):null}\n                {!loading && pokemon ? (\n                    \n                    <PokemonData \n                \n                    name={pokemon.name} \n                    sprite ={pokemon.sprites.front_default}\n                    abilities = {pokemon.abilities}\n                    stats = {pokemon.stats}\n                    types = {pokemon.types}\n                    footPrints={pokemon.footPrints}/>\n                    \n                ): null}\n                \n\n                </div>\n                <div><button className=\"catch-btn\" \n                onClick={() => catchPokemon(pokemon)}>CATCH</button></div>\n                <section className=\"pokedex\">\n                    <h2>You've catched</h2>\n\n                    <div className=\"pokedex-list\">\n                        {pokeDex.map(pokemon => (\n                            <div className=\"pokemon\" key={pokemon.id}>\n                            <img src={pokemon.sprites.front_default} alt=\"\" className=\"sprite\" />\n\n                            <h3 className=\"pokemon-name\">{pokemon.name}</h3>\n\n                            <button className=\"remove\" onClick={() => releasePokemon(pokemon.id)}>X</button>\n                            </div>\n                        ))}\n                    </div>\n                </section>\n        </div>\n    );\n}\nexport default HomePage;","/home/abbe/Desktop/React-project/poke-info/poke-info/src/pages/favorite.js",["88","89","90","91","92"],"import firebase from 'firebase';\nimport React, { useEffect, useState } from 'react'\n\n//import {GetServerSideProps} from \"next\"\n\n/* // js/dinnerModel.js\nclass DinnerModel{ ..// we add one method. addToMenu and removeFromMenu could be used, but this is shorter:\n\tsetDishes(dishes){ this.dishes= [...dishes]; /* TODO notify observers!  ;}\n\n    // js/firebaseModel.js\nconst REF= /* as before \nfunction persistModel(model){\n\tmodel.addObserver(//  leave the observer unchanged\n       );\n\nfirebase.database().ref(REF).once(\"value\", function(data){\n\tif(data.val()){\n\t\tmodel.setNumberOfGuests(data.val().guests);\n\t\t// TODO setDishes, setCurrentDish\n\t} \n});\n}\n\n*/\n\n\nconst favorite = ()=> {\n    \n    \n    var [Pokemons]=[] ;\n    let pokiCount =0;\n    let currentUser= firebase.auth().currentUser.uid;\n    var starCountRef = firebase.database().ref(`pokemons/+${currentUser}/`);\n    starCountRef.on('value', (snapshot) => {\n      var data = snapshot.val(); \n      Object.entries(data).forEach((pokiCount) => {pokiCount++})\n      console.log(pokiCount)\n      Object.entries(data).forEach((entry) => {\n        console.log('begining');\n        const [key,value] = entry;\n        console.log(`${key}`);\n        let temp = [];\n        //temp=[...temp ,value];\n            console.log(temp);\n            //Pokemons.push(temp);\n            //console.log(Pokemons)\n           \n\n        Object.entries(entry).forEach(() => {\n            console.log('end');\n            const [key] = entry;\n            \n            //   <div className=\"pokemon\" key={pokemon.id}>\n            //<img src={pokemon.sprites.front_default} alt=\"\" className=\"sprite\" />\n            // <h3 className=\"pokemon-name\">{entry}</h3>\n        });\n        \n      });\n      \n    });\n\n    return (\n        <div>\n              <section className=\"pokedex\">\n                    <h2>You've catched</h2>\n\n                    <div >\n                        <div>\n                       \n                        {//[temp].map(pokemon => ( \n                            \n                            //))\n                            }\n                            </div>\n                    </div>\n                </section>\n        </div>\n\n    );\n\n}\n\nexport default favorite;","/home/abbe/Desktop/React-project/poke-info/poke-info/src/pages/about.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":3,"column":22,"nodeType":"99","messageId":"100","endLine":3,"endColumn":34},{"ruleId":"93","replacedBy":"102"},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","severity":1,"message":"104","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":26},{"ruleId":"97","severity":1,"message":"105","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":121,"column":33,"nodeType":"108","endLine":121,"endColumn":68},{"ruleId":"97","severity":1,"message":"104","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":26},{"ruleId":"97","severity":1,"message":"109","line":2,"column":28,"nodeType":"99","messageId":"100","endLine":2,"endColumn":36},{"ruleId":"97","severity":1,"message":"110","line":30,"column":10,"nodeType":"99","messageId":"100","endLine":30,"endColumn":18},{"ruleId":"97","severity":1,"message":"111","line":40,"column":20,"nodeType":"99","messageId":"100","endLine":40,"endColumn":25},{"ruleId":"97","severity":1,"message":"112","line":51,"column":20,"nodeType":"99","messageId":"100","endLine":51,"endColumn":23},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Authprovider' is defined but never used.",["113"],["114"],"'useEffect' is defined but never used.","'db' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Pokemons' is assigned a value but never used.","'value' is assigned a value but never used.","'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]